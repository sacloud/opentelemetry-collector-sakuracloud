// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for sakuracloud metrics.
type MetricsConfig struct {
	SakuracloudServerCPUTime                 MetricConfig `mapstructure:"sakuracloud.server.cpu_time"`
	SakuracloudServerDiskRead                MetricConfig `mapstructure:"sakuracloud.server.disk.read"`
	SakuracloudServerDiskWrite               MetricConfig `mapstructure:"sakuracloud.server.disk.write"`
	SakuracloudServerNetworkInterfaceReceive MetricConfig `mapstructure:"sakuracloud.server.network_interface.receive"`
	SakuracloudServerNetworkInterfaceSend    MetricConfig `mapstructure:"sakuracloud.server.network_interface.send"`
	SakuracloudServerUp                      MetricConfig `mapstructure:"sakuracloud.server.up"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		SakuracloudServerCPUTime: MetricConfig{
			Enabled: false,
		},
		SakuracloudServerDiskRead: MetricConfig{
			Enabled: false,
		},
		SakuracloudServerDiskWrite: MetricConfig{
			Enabled: false,
		},
		SakuracloudServerNetworkInterfaceReceive: MetricConfig{
			Enabled: false,
		},
		SakuracloudServerNetworkInterfaceSend: MetricConfig{
			Enabled: false,
		},
		SakuracloudServerUp: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for sakuracloud metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
